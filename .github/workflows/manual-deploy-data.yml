name: data_pipeline
env:

  PYTHON_VERSION: '3.11'              # set this to the Python version to use
  azd_cred: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_TENANT_ID: ${{ vars.TENANTID }}
  AZURE_STORAGE_CONTAINER: ${{ vars.CONTAINER }}
  AZURE_FORMRECOGNIZER_SERVICE: ${{ vars.FORMRECOGNIZERSERVICE }}
  AZURE_SEARCH_INDEX : ${{ vars.INDEX}}
  AZURE_SEARCH_SERVICE : ${{ vars.SEARCHSERVICE}}
  AZURE_STORAGE_ACCOUNT : ${{ vars.STORAGEACCOUNT}}

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # This workflow contains a single job called "build"
  deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: Development
    env:
         AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
         AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
         AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install Azure CLI
        run: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            az version
      - name: Install Azure Developer CLI
        run: curl -fsSL https://aka.ms/install-azd.sh | bash

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Set up Python version
        uses: actions/setup-python@v3.0.0

        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Script run 
        shell: bash
        run: |
              chmod +x scripts/prepdocs.sh
              set +x
              echo "${{env.TENANTID }}"
              echo "${{env.AZURE_CREDENTIALS}}"
              #python scripts/test.py '${{env.TENANTID }}'
               ./scripts/prepdocs.sh 
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
